[{"/home/obayemi/dev/simple_notes/simple_note_app/src/App.js":"1","/home/obayemi/dev/simple_notes/simple_note_app/src/reducers/auth.ts":"2","/home/obayemi/dev/simple_notes/simple_note_app/src/index.tsx":"3","/home/obayemi/dev/simple_notes/simple_note_app/src/reducers/index.ts":"4","/home/obayemi/dev/simple_notes/simple_note_app/src/Login.tsx":"5","/home/obayemi/dev/simple_notes/simple_note_app/src/reportWebVitals.js":"6","/home/obayemi/dev/simple_notes/simple_note_app/src/NavBar.tsx":"7","/home/obayemi/dev/simple_notes/simple_note_app/src/reducers/notes.ts":"8","/home/obayemi/dev/simple_notes/simple_note_app/src/Editor.tsx":"9","/home/obayemi/dev/simple_notes/simple_note_app/src/services/auth.ts":"10","/home/obayemi/dev/simple_notes/simple_note_app/src/services/notes.ts":"11","/home/obayemi/dev/simple_notes/simple_note_app/src/axios.ts":"12"},{"size":3548,"mtime":1607364875876,"results":"13","hashOfConfig":"14"},{"size":3311,"mtime":1607397499170,"results":"15","hashOfConfig":"14"},{"size":1130,"mtime":1607389594148,"results":"16","hashOfConfig":"14"},{"size":187,"mtime":1607389632425,"results":"17","hashOfConfig":"14"},{"size":2293,"mtime":1607397357978,"results":"18","hashOfConfig":"14"},{"size":362,"mtime":1606136801157,"results":"19","hashOfConfig":"14"},{"size":1000,"mtime":1607395604525,"results":"20","hashOfConfig":"14"},{"size":2032,"mtime":1607389290277,"results":"21","hashOfConfig":"14"},{"size":1713,"mtime":1607397372572,"results":"22","hashOfConfig":"14"},{"size":861,"mtime":1607390464181,"results":"23","hashOfConfig":"14"},{"size":820,"mtime":1607389293525,"results":"24","hashOfConfig":"14"},{"size":1101,"mtime":1607397164896,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"zr6abd",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/obayemi/dev/simple_notes/simple_note_app/src/App.js",["55","56","57","58","59"],"//import logo from './logo.svg';\nimport './App.css';\nimport Login from './Login'\nimport NavBar from './NavBar'\nimport Editor from './Editor'\n\nimport React, { useState, useEffect } from \"react\";\nimport 'react-quill/dist/quill.snow.css';\nimport PropTypes from 'prop-types';\nimport { connect, useSelector, shallowEqual, useDispatch } from 'react-redux'\n//import {setNote, saveNote, updateNote} from './reducers/notes'\nimport {loadNotes, loadNote, clearNote} from './reducers/notes'\nimport {tryRetrieveTokens, } from './reducers/auth'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n    Redirect,\n} from \"react-router-dom\";\nimport { Card, ListGroup, Container, Row, Col} from 'react-bootstrap';\n\n\nfunction About(props) {\n    return (\n        <Container className=\"page-content\">\n        <div>\n        <h1>{props.name}</h1>\n        </div>\n        </Container>\n    );\n}\n\nfunction NewNote(props) {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(clearNote())\n    }, [dispatch])\n\n    return (\n        <Editor/>\n    )\n}\n\nfunction NoteEdit(props) {\n    const {id} = useParams()\n    const note = useSelector(\n        state => state.notes.note\n    )\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadNote(id))\n    }, [dispatch, id])\n\n    return (\n        <Editor note={note}/>\n    );\n}\n\nfunction NotesList(props) {\n    const notes = useSelector(\n        state => state.notes.notes\n    )\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadNotes())\n    }, [dispatch])\n    return (\n        <Container style={{padding: \"50px 0\"}}>\n          <Card>\n            <Card.Header>Notes</Card.Header>\n            <ListGroup variant=\"flush\">\n              {notes.map((note) => \n                  <Link key={note.id} to={`/n/${note.id}`}>\n                  <ListGroup.Item action key={note.url}>{note.title}</ListGroup.Item>\n                  </Link>\n              )}\n            </ListGroup>\n          </Card>\n        </Container>\n    )\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const tokens = useSelector(\n      state => state.auth.tokens\n  )\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        tokens ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction App(props) {\n    //props.setNote({\"id\":\"\", 'title': 'aaa', 'htmlContent':'aaaaaaaaaa'})\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(\n            tryRetrieveTokens()\n        )\n    })\n\n    return (\n        <Row className=\"full-height\" noGutters>\n            <Router>\n                <Col md=\"auto\">\n                    <NavBar />\n                </Col>\n                <Col style={{height:\"100vh\", overflow:'auto'}}>\n                    <Switch>\n                        <Route path=\"/login\">\n                            <Login/>\n                        </Route>\n                        <PrivateRoute path=\"/n/:id\">\n                            <NoteEdit/>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/notes\">\n                            <NotesList />\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/\">\n                            <NewNote/>\n                        </PrivateRoute>\n                    </Switch>\n                </Col>\n            </Router>\n        </Row>\n    );\n}\n\n\nexport default App;\n",["60","61"],"/home/obayemi/dev/simple_notes/simple_note_app/src/reducers/auth.ts",["62","63"],"/home/obayemi/dev/simple_notes/simple_note_app/src/index.tsx",[],"/home/obayemi/dev/simple_notes/simple_note_app/src/reducers/index.ts",[],"/home/obayemi/dev/simple_notes/simple_note_app/src/Login.tsx",[],"/home/obayemi/dev/simple_notes/simple_note_app/src/reportWebVitals.js",[],["64","65"],"/home/obayemi/dev/simple_notes/simple_note_app/src/NavBar.tsx",[],"/home/obayemi/dev/simple_notes/simple_note_app/src/reducers/notes.ts",["66","67","68"],"import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AuthState, refreshToken } from \"./auth\";\nimport { TokenPair } from \"../models/auth\";\nimport {\n  fetchNotes,\n  fetchNote,\n  updateNote,\n  createNote,\n} from \"../services/notes\";\nimport { Note } from \"../models/notes\";\n\nexport interface NoteContent {\n  htmlContent: string;\n}\n\nexport interface NotesState {\n  notes: Note[];\n  note?: Note;\n}\n\nconst initialState: NotesState = {\n  notes: [],\n  note: undefined,\n};\n\nexport const loadNotes = createAsyncThunk(\n  \"notes/loadNotes\",\n  async (_: void, thunkAPI) => {\n    return await fetchNotes();\n  }\n);\n\nexport const loadNote = createAsyncThunk(\n  \"notes/loadNote\",\n  async (note: number, thunkAPI) => {\n    return await fetchNote(note);\n  }\n);\nexport const saveNote = createAsyncThunk(\n  \"notes/saveNote\",\n  async (html: string, thunkAPI) => {\n    const state = thunkAPI.getState() as { notes: NotesState };\n    const currentNote = state.notes.note;\n    if (currentNote !== undefined) {\n      return await updateNote(currentNote.id, {\n        ...currentNote,\n        htmlContent: html,\n      });\n    } else {\n      return await createNote({\n        title: `new note (${new Date()})`,\n        htmlContent: html,\n      });\n    }\n  }\n);\n\nexport const notesSlice = createSlice({\n  name: \"notes\",\n  initialState,\n  reducers: {\n    clearNote(state) {\n      return {\n        ...state,\n        note: undefined,\n      };\n    },\n  },\n  extraReducers: {\n    [`${loadNotes.fulfilled}`]: (state, action: PayloadAction<Note[]>) => {\n      return {\n        ...state,\n        notes: action.payload,\n      };\n    },\n    [`${loadNote.fulfilled}`]: (state, action: PayloadAction<Note>) => {\n      return {\n        ...state,\n        note: action.payload,\n      };\n    },\n    [`${saveNote.fulfilled}`]: (state, action: PayloadAction<Note>) => {\n      return {\n        ...state,\n        note: action.payload,\n      };\n    },\n  },\n});\n\nexport const { clearNote } = notesSlice.actions;\n\nexport default notesSlice.reducer;\n","/home/obayemi/dev/simple_notes/simple_note_app/src/Editor.tsx",[],"/home/obayemi/dev/simple_notes/simple_note_app/src/services/auth.ts",[],"/home/obayemi/dev/simple_notes/simple_note_app/src/services/notes.ts",["69"],"import { Credentials } from \"../models/auth\";\nimport { Note } from \"../models/notes\";\nimport axios from \"axios\";\n\nexport interface PaginatedResponse<T> {\n  count: number;\n  next: any;\n  previous: any;\n  results: T[];\n}\n\nexport async function fetchNote(noteId: number) {\n  const response = await axios.get<Note>(`/notes/${noteId}/`);\n  return response.data;\n}\n\nexport async function fetchNotes() {\n  const response = await axios.get<PaginatedResponse<Note>>(\"/notes/\");\n  console.log(response);\n  return response.data.results;\n}\n\nexport async function createNote(note: any) {\n  const response = await axios.post<Note>(\"/notes/\", note);\n  return response.data;\n}\n\nexport async function updateNote(noteId: number, note: Note) {\n  const response = await axios.put<Note>(`/notes/${noteId}/`, note);\n  return response.data;\n}\n","/home/obayemi/dev/simple_notes/simple_note_app/src/axios.ts",[],{"ruleId":"70","severity":1,"message":"71","line":7,"column":17,"nodeType":"72","messageId":"73","endLine":7,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":9,"column":8,"nodeType":"72","messageId":"73","endLine":9,"endColumn":17},{"ruleId":"70","severity":1,"message":"75","line":10,"column":10,"nodeType":"72","messageId":"73","endLine":10,"endColumn":17},{"ruleId":"70","severity":1,"message":"76","line":10,"column":32,"nodeType":"72","messageId":"73","endLine":10,"endColumn":44},{"ruleId":"70","severity":1,"message":"77","line":25,"column":10,"nodeType":"72","messageId":"73","endLine":25,"endColumn":15},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":4,"column":3,"nodeType":"72","messageId":"73","endLine":4,"endColumn":14},{"ruleId":"82","severity":1,"message":"84","line":10,"column":7,"nodeType":"72","messageId":"73","endLine":10,"endColumn":13},{"ruleId":"78","replacedBy":"85"},{"ruleId":"80","replacedBy":"86"},{"ruleId":"82","severity":1,"message":"87","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":19},{"ruleId":"82","severity":1,"message":"88","line":2,"column":21,"nodeType":"72","messageId":"73","endLine":2,"endColumn":33},{"ruleId":"82","severity":1,"message":"89","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":19},{"ruleId":"82","severity":1,"message":"90","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":21},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'connect' is defined but never used.","'shallowEqual' is defined but never used.","'About' is defined but never used.","no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'verifyToken' is defined but never used.","'apiUrl' is assigned a value but never used.",["91"],["92"],"'AuthState' is defined but never used.","'refreshToken' is defined but never used.","'TokenPair' is defined but never used.","'Credentials' is defined but never used.","no-global-assign","no-unsafe-negation"]